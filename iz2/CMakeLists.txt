cmake_minimum_required(VERSION 3.0.0)
project(iz2 C)

set(CMAKE_C_STANDARD 99)

option(STREAMS "Do u wanna use lib with strems" OFF)
option(TEST "Do u wanna use lib with strems" OFF)

if (STREAMS)
    add_subdirectory(dinamic_lib)
    message("DINAMIC_LIB_INCLUDE_DIRS = ${DINAMIC_LIB_INCLUDE_DIRS}")
    message("DINAMIC_LIB_LIBRARIES = ${DINAMIC_LIB_LIBRARIES}")
else()
    add_subdirectory(static_lib)
    message("STATIC_LIB_INCLUDE_DIRS = ${STATIC_LIB_INCLUDE_DIRS}")
    message("STATIC_LIB_LIBRARIES = ${STATIC_LIB_LIBRARIES}")
endif()

add_executable(${PROJECT_NAME} main.c)

if (TEST)
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -coverage -lgcov" )
    set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} "-Wall -Wpedantic -Wextra -Werror -fprofile-arcs -ftest-coverage -fPIC -O0")
    set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} "-Wall -Wpedantic -Wextra -Werror -fprofile-arcs -ftest-coverage -fPIC -O0")
else()
    set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} "-Wall -Wpedantic -Wextra -Werror -O0")
    set(CMAKE_CXX_FLAGS ${CMAKE_C_FLAGS} "-Wall -Wpedantic -Wextra -Werror -O0")
endif()

if (STREAMS)
    target_include_directories(${PROJECT_NAME} PUBLIC ${DINAMIC_LIB_INCLUDE_DIRS})
    target_link_libraries(${PROJECT_NAME} PRIVATE ${DINAMIC_LIB_LIBRARIES})
    target_link_libraries(${PROJECT_NAME} PRIVATE m)
else()
    target_include_directories(${PROJECT_NAME} PUBLIC ${STATIC_LIB_INCLUDE_DIRS})
    target_link_libraries(${PROJECT_NAME} PRIVATE ${STATIC_LIB_LIBRARIES})
    target_link_libraries(${PROJECT_NAME} PRIVATE m)
endif()

if (TEST)
    if (STREAMS)

    else()
        add_subdirectory(stat_tests)
    endif()
endif()